{% set name = "kopf" %}
{% set version = "1.38.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 7b9f83240269636e00e4b11e9c7c8afbfefba3d3326ac2d2aa7904d35c4f89cd

build:
  skip: true  # [py<39]
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  number: 0

requirements:
  host:
    - python
    - pip
    - setuptools-scm
    - wheel
  run:
    - python
    - python-json-logger
    - iso8601
    - click
    - aiohttp  # [py<312]
    - aiohttp >=3.9.0  # [py>=312]
    - pyyaml
  run_constrained:
    # extra: full-auth
    # - pykube-ng
    # - kubernetes
    # extra: uvloop
    # - uvloop  # [py<312]
    - uvloop >=0.18.0  # [py>312]

test:
  imports:
    - kopf
  requires:
    - pip
  commands:
    - pip check
    # pytest tests too unstable due to performance checks

about:
  home: https://github.com/nolar/kopf
  summary: 'A Python framework to write Kubernetes operators in just a few lines of code '
  description: |
    Kopf —Kubernetes Operator Pythonic Framework— is a framework and a library to make Kubernetes
    operators development easier, just in a few lines of Python code.

    The main goal is to bring the Domain-Driven Design to the infrastructure level, with Kubernetes
    being an orchestrator/database of the domain objects (custom resources), and the operators containing
    the domain logic (with no or minimal infrastructure logic).

    The project was originally started as zalando-incubator/kopf in March 2019, and then forked as
    nolar/kopf in August 2020: but it is the same codebase, the same packages, the same developer(s).

  license: MIT
  license_family: MIT
  license_file: LICENSE
  doc_url: https://kopf.readthedocs.io
  dev_url: https://github.com/nolar/kopf

extra:
  recipe-maintainers:
    - jacobtomlinson
